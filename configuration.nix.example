# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  nix = {
    package = pkgs.nixFlakes;
    extraOptions = ''
      experimental-features = nix-command flakes
    '';
  };
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # Bootloader.
  boot.loader = {
    efi = {
      canTouchEfiVariables = true;
      efiSysMountPoint = "/boot/efi";
    };

    grub = {
      enable = true;
      version = 2;
      efiSupport = true;

      # Enable this 
      useOSProber = true;

      # Disable this on fresh install
      # devices = [ "nodev" ];

      # extraEntries = ''
      #   menuentry 'Arch Linux (on /dev/sdb2)' --class arch --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-simple-a737cad4-85d7-49af-bd66-72d8bcd986e6' {
      #     insmod part_gpt
      #     insmod fat
      #     set root='hd1,gpt1'
      #     if [ x$feature_platform_search_hint = xy ]; then
      #       search --no-floppy --fs-uuid --set=root --hint-bios=hd1,gpt1 --hint-efi=hd1,gpt1 --hint-baremetal=ahci1,gpt1  E636-EFDE
      #     else
      #       search --no-floppy --fs-uuid --set=root E636-EFDE
      #     fi
      #     linux /vmlinuz-linux-zen root=UUID=a737cad4-85d7-49af-bd66-72d8bcd986e6 rw rootfstype=ext4 loglevel=3 quiet
      #     initrd /intel-ucode.img
      #   }
      #   submenu 'Advanced options for Arch Linux (on /dev/sdb2)' $menuentry_id_option 'osprober-gnulinux-advanced-a737cad4-85d7-49af-bd66-72d8bcd986e6' {
      #     menuentry 'Arch Linux (on /dev/sdb2)' --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-/vmlinuz-linux-zen--a737cad4-85d7-49af-bd66-72d8bcd986e6' {
      #       insmod part_gpt
      #       insmod fat
      #       set root='hd1,gpt1'
      #       if [ x$feature_platform_search_hint = xy ]; then
      #         search --no-floppy --fs-uuid --set=root --hint-bios=hd1,gpt1 --hint-efi=hd1,gpt1 --hint-baremetal=ahci1,gpt1  E636-EFDE
      #       else
      #         search --no-floppy --fs-uuid --set=root E636-EFDE
      #       fi
      #       linux /vmlinuz-linux-zen root=UUID=a737cad4-85d7-49af-bd66-72d8bcd986e6 rw rootfstype=ext4 loglevel=3 quiet
      #       initrd /intel-ucode.img
      #     }
      #     menuentry 'Arch Linux, with Linux linux-zen (on /dev/sdb2)' --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-/vmlinuz-linux-zen--a737cad4-85d7-49af-bd66-72d8bcd986e6' {
      #       insmod part_gpt
      #       insmod fat
      #       set root='hd1,gpt1'
      #       if [ x$feature_platform_search_hint = xy ]; then
      #         search --no-floppy --fs-uuid --set=root --hint-bios=hd1,gpt1 --hint-efi=hd1,gpt1 --hint-baremetal=ahci1,gpt1  E636-EFDE
      #       else
      #         search --no-floppy --fs-uuid --set=root E636-EFDE
      #       fi
      #       linux /vmlinuz-linux-zen root=UUID=a737cad4-85d7-49af-bd66-72d8bcd986e6 rw rootfstype=ext4 loglevel=3 quiet
      #       initrd /intel-ucode.img
      #     }
      #     menuentry 'Arch Linux, with Linux linux-zen (fallback initramfs) (on /dev/sdb2)' --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-/vmlinuz-linux-zen--a737cad4-85d7-49af-bd66-72d8bcd986e6' {
      #       insmod part_gpt
      #       insmod fat
      #       set root='hd1,gpt1'
      #       if [ x$feature_platform_search_hint = xy ]; then
      #         search --no-floppy --fs-uuid --set=root --hint-bios=hd1,gpt1 --hint-efi=hd1,gpt1 --hint-baremetal=ahci1,gpt1  E636-EFDE
      #       else
      #         search --no-floppy --fs-uuid --set=root E636-EFDE
      #       fi
      #       linux /vmlinuz-linux-zen root=UUID=a737cad4-85d7-49af-bd66-72d8bcd986e6 rw rootfstype=ext4 loglevel=3 quiet
      #       initrd /intel-ucode.img
      #     }
      #   }
      # '';
    };
  };

  networking.hostName = "eka-laptop"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "Asia/Jakarta";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.utf8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "id_ID.utf8";
    LC_IDENTIFICATION = "id_ID.utf8";
    LC_MEASUREMENT = "id_ID.utf8";
    LC_MONETARY = "id_ID.utf8";
    LC_NAME = "id_ID.utf8";
    LC_NUMERIC = "id_ID.utf8";
    LC_PAPER = "id_ID.utf8";
    LC_TELEPHONE = "id_ID.utf8";
    LC_TIME = "id_ID.utf8";
  };

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME Desktop Environment.
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;

  # Configure keymap in X11
  services.xserver = {
    layout = "us";
    xkbVariant = "";
  };

  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.eekrain = {
    isNormalUser = true;
    description = "Ardian Eka Candra";
    extraGroups = [ "networkmanager" "wheel" ];
    packages = with pkgs; [
      firefox
    #  thunderbird
    ];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
  #  vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
  #  wget
  ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "22.05"; # Did you read the comment?

}
